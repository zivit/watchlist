import { VerticalBox, HorizontalBox, ComboBox } from "std-widgets.slint";
import { ToolBar, ToolButton } from "ToolBar.slint";
import { Show, Status, ShowType } from "Structs.slint";
import { SpinBox } from "SpinBox.slint";
import { Images, Palette } from "Global.slint";
import { ScoreWidget } from "ScoreWidget.slint";
import { ShowImageFullScreen } from "ShowImageFullScreen.slint";

export component ShowWindow inherits Rectangle {
    callback back(bool, Show);
    callback edit(Show);
    callback remove(Show);
    callback status-changed();
    callback favorite-changed();
    callback score-changed();
    callback season-changed();
    callback episode-changed();
    callback open-link(string);

    property <[int]> week;
    in property <int> day-now;
    property <[string]> days: ["Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun"];

    in-out property <Show> show;
    in property <image> show-image: Images.show-picture;
    property <bool> show-changed: false;

    public function display-show(show: Show) {
        root.show = show;

        if (show.picture.width > 0) {
            show-image.source = show.picture;
        }
        else {
            show-image.source = Images.show-picture;
        }

        score-widget.score = show.score;

        if (show.status == Status.watch-later) {
            watch-later-button.checked = true;
            watching-button.checked = false;
            completed-button.checked = false;
            dropped-button.checked = false;
        }
        else if (show.status == Status.watching) {
            watching-button.checked = true;
            watch-later-button.checked = false;
            completed-button.checked = false;
            dropped-button.checked = false;
        }
        else if (show.status == Status.completed) {
            completed-button.checked = true;
            watch-later-button.checked = false;
            watching-button.checked = false;
            dropped-button.checked = false;
        }
        else if (show.status == Status.dropped) {
            dropped-button.checked = true;
            watch-later-button.checked = false;
            watching-button.checked = false;
            completed-button.checked = false;
        }

        if (show.favorite) {
            favorite-button.checked = true;
        }
        else {
            favorite-button.checked = false;
        }

        season.value = show.season;
        episode.value = show.episode;
        title.text = show.title;
        alternative-title.text = show.alternative-title;
        release-date.text = show.release-date;
        about-show.text = show.about;

        if (show.release-time != "") {
            week = [show.schedule-monday, show.schedule-tuesday, show.schedule-wednesday,
                show.schedule-thursday, show.schedule-friday, show.schedule-saturday, show.schedule-sunday];
        }
        else {
            week = [];
        }
    }

    VerticalBox {
        padding: 0px;
        spacing: 0px;

        ToolBar {
            height: 50px;
            background: Palette.primary;

            Rectangle {
                width: 100px;

                HorizontalLayout {
                    edit-button := ToolButton {
                        hint: "Edit";
                        icon: Images.edit;
                        width: 50px;
                        height: 50px;
                        background-color: Palette.primary;
                        z: 1;

                        clicked => {
                            remove-button.sure = false;
                            edit(show);
                        }
                    }

                    remove-button := ToolButton {
                        hint: "Remove";
                        icon: sure ? Images.remove_sure : Images.remove;
                        width: 50px;
                        height: 50px;
                        background-color: Palette.primary;
                        property <bool> sure: false;

                        clicked => {
                            if (sure) {
                                remove(show);
                                sure = false;
                            }
                            else {
                                sure = true;
                            }
                        }
                    }
                }
            }

            cancel-button := ToolButton {
                hint: "Cancel";
                hint-direction-left: true;
                icon: Images.cancel;
                width: 50px;
                height: 50px;
                background-color: Palette.primary;

                clicked => {
                    remove-button.sure = false;
                    back(show-changed, show);
                    show-changed = false;
                }
            }
        }

        HorizontalBox {
            padding: 25px;
            spacing: 25px;

            VerticalBox {
                z: 1;
                padding: 0px;
                spacing: 10px;
                alignment: start;

                show-image := Image {
                    width: 200px;
                    source: root.show-image;

                    TouchArea {
                        mouse-cursor: pointer;

                        clicked => {
                            image-full.visible = true;
                        }
                    }
                }

                score-widget := ScoreWidget {
                    score-changed(score) => {
                        show.score = score;
                        root.score-changed();
                        show-changed = true;
                    }
                }

                HorizontalBox {
                    alignment: space-between;
                    padding: 0px;
                    spacing: 0px;

                    watch-later-button := ToolButton {
                        background-color: Palette.primary;
                        checked-color: Palette.yellow;
                        checkable: true;
                        checked: true;
                        width: 36px;
                        height: 32px;
                        icon: Images.watch-later;
                        hint: "Plan to watch";
                        z: 100;
                        clicked => {
                            if (!self.checked) {
                                watching-button.checked = false;
                                completed-button.checked = false;
                                dropped-button.checked = false;
                                show.status = Status.watch-later;
                                status-changed();
                                show-changed = true;
                            }
                            else {
                                self.checked = false;
                            }
                        }
                    }

                    watching-button := ToolButton {
                        background-color: Palette.primary;
                        checked-color: Palette.green;
                        checkable: true;
                        checked: false;
                        width: 36px;
                        height: 32px;
                        icon: Images.watching;
                        hint: "Watching";
                        z: 99;
                        clicked => {
                            if (!self.checked) {
                                watch-later-button.checked = false;
                                completed-button.checked = false;
                                dropped-button.checked = false;
                                show.status = Status.watching;
                                status-changed();
                                show-changed = true;
                            }
                            else {
                                self.checked = false;
                            }
                        }
                    }
                    completed-button := ToolButton {
                        background-color: Palette.primary;
                        checked-color: Palette.blue;
                        checkable: true;
                        checked: false;
                        width: 36px;
                        height: 32px;
                        icon: Images.completed;
                        hint: "Completed";
                        z: 98;
                        clicked => {
                            if (!self.checked) {
                                watch-later-button.checked = false;
                                watching-button.checked = false;
                                dropped-button.checked = false;
                                show.status = Status.completed;
                                status-changed();
                                show-changed = true;
                            }
                            else {
                                self.checked = false;
                            }
                        }
                    }
                    favorite-button := ToolButton {
                        background-color: Palette.primary;
                        checked-color: Palette.purple;
                        checkable: true;
                        checked: false;
                        width: 36px;
                        height: 32px;
                        icon: Images.liked;
                        hint: "Favorite";
                        z: 97;
                        clicked => {
                            if (dropped-button.checked) {
                                completed-button.checked = true;
                                show.status = Status.completed;
                                status-changed();
                            }
                            if (!self.checked) {
                                dropped-button.checked = false;
                            }
                            show.favorite = !self.checked;
                            favorite-changed();
                            show-changed = true;
                        }
                    }
                    dropped-button := ToolButton {
                        background-color: Palette.primary;
                        checked-color: Palette.red;
                        checkable: true;
                        checked: false;
                        width: 36px;
                        height: 32px;
                        icon: Images.dropped;
                        hint: "Dropped";
                        z: 96;
                        clicked => {
                            if (!self.checked) {
                                watch-later-button.checked = false;
                                watching-button.checked = false;
                                completed-button.checked = false;
                                favorite-button.checked = false;
                                show.status = Status.dropped;
                                show.favorite = false;
                                status-changed();
                                favorite-changed();
                                show-changed = true;
                            }
                            else {
                                self.checked = false;
                            }
                        }
                    }
                }

                season := SpinBox {
                    height: 32px;
                    hint: "Season ";
                    min: 1;
                    value: 1;
                    background-color: Palette.blue;

                    changed(value) => {
                        show.season = value;
                        season-changed();
                        episode.value = 1;
                        episode-changed();
                        show-changed = true;
                    }
                }

                episode := SpinBox {
                    height: 32px;
                    hint: "Episode ";
                    min: 1;
                    value: 1;
                    max: show.episodes-count;
                    background-color: Palette.blue;

                    changed(value) => {
                        show.episode = value;
                        episode-changed();

                        if (show.episode >= show.episodes-count && watching-button.checked) {
                            watching-button.checked = false;
                            watch-later-button.checked = false;
                            completed-button.checked = true;
                            dropped-button.checked = false;
                            show.status = Status.completed;
                            status-changed();
                        }

                        show-changed = true;
                    }
                }

                if show.link-to-show != "": ToolButton {
                    height: 32px;
                    text: "Watch now";
                    background-color: Palette.green;

                    clicked => {
                        open-link(show.link-to-show);

                        if (!watching-button.checked) {
                            watching-button.checked = true;
                            watch-later-button.checked = false;
                            completed-button.checked = false;
                            dropped-button.checked = false;
                            show.status = Status.watching;
                            status-changed();
                            show-changed = true;
                        }

                        episode.increment();
                    }
                }
            }

            VerticalBox {
                z: 0;
                padding: 0px;
                spacing: 5px;
                alignment: start;

                title := TextInput {
                    font-size: 20px;
                    font-weight: 900;
                    read-only: true;
                    wrap: word-wrap;
                }

                alternative-title := TextInput {
                    read-only: true;
                    wrap: word-wrap;
                }

                episodes := TextInput {
                    read-only: true;
                    wrap: word-wrap;
                    text: show.episodes-count + @tr(" episodes");
                }

                release-date := TextInput {
                    read-only: true;
                }

                if show.release-time != "": HorizontalBox {
                    padding: 0px;
                    spacing: 0px;
                    horizontal-stretch: 0;

                    for day[i] in week: Rectangle {
                        background: day > 0 ? Palette.blue : Palette.primary;
                        border-width: 2px;
                        border-color: i == day-now ? Palette.red : self.background;
                        width: 50px;

                        Text {
                            text: days[i];
                            color: Palette.text;
                        }
                    }

                    Rectangle {
                        horizontal-stretch: 1;
                    }
                }

                about-show := TextInput {
                    read-only: true;
                    wrap: word-wrap;
                }
            }
        }
    }

    image-full := ShowImageFullScreen {
        visible: false;
        image: show-image.source;
    }

}

